(function (a, c, b) { a.fn.jScrollPane = function (c) { function d(d, Bb) { var c, i = this, f, h, g, e, m, l, W, T, q, p, n, t, k, o, A, j, U, r, V, G, z, K, J, P, s, C, y, L, M, Q, db, B, hb, O = true, S = true, N = false, R = false, ab = d.clone(false, false).empty(), X = a.fn.mwheelIntent ? "mwheelIntent.jsp" : "mousewheel.jsp"; db = d.css("paddingTop") + " " + d.css("paddingRight") + " " + d.css("paddingBottom") + " " + d.css("paddingLeft"); B = (parseInt(d.css("paddingLeft"), 10) || 0) + (parseInt(d.css("paddingRight"), 10) || 0); function bb(s) { var o, y, x, n, i, r, z = false, t = false; c = s; if (f === b) { i = d.scrollTop(); r = d.scrollLeft(); d.css({ overflow: "hidden", padding: 0 }); h = d.innerWidth() + B; g = d.innerHeight(); d.width(h); f = a('<div class="jspPane" />').css("padding", db).append(d.children()); e = a('<div class="jspContainer" />').css({ width: h + "px", height: g + "px" }).append(f).appendTo(d) } else { d.css("width", ""); z = c.stickToBottom && zb(); t = c.stickToRight && sb(); n = d.innerWidth() + B != h || d.outerHeight() != g; if (n) { h = d.innerWidth() + B; g = d.innerHeight(); e.css({ width: h + "px", height: g + "px" }) } if (!n && hb == m && f.outerHeight() == l) { d.width(h); return } hb = m; f.css("width", ""); d.width(h); e.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end() } f.css("overflow", "auto"); if (s.contentWidth) m = s.contentWidth; else m = f[0].scrollWidth; l = f[0].scrollHeight; f.css("overflow", ""); W = m / h; T = l / g; q = T > 1; p = W > 1; if (!(p || q)) { d.removeClass("jspScrollable"); f.css({ top: 0, width: e.width() - B }); Ab(); ub(); lb(); kb(); eb() } else { d.addClass("jspScrollable"); o = c.maintainPosition && (k || j); if (o) { y = w(); x = v() } qb(); ob(); vb(); if (o) { F(t ? m - h : y, false); u(z ? l - g : x, false) } yb(); pb(); rb(); c.enableKeyboardNavigation && mb(); c.clickOnTrack && Cb(); tb(); c.hijackInternalLinks && ib() } if (c.autoReinitialise && !Q) Q = setInterval(function () { bb(c) }, c.autoReinitialiseDelay); else !c.autoReinitialise && Q && clearInterval(Q); i && d.scrollTop(0) && u(i, false); r && d.scrollLeft(0) && F(r, false); d.trigger("jsp-initialised", [p || q]) } function qb() { if (q) { e.append(a('<div class="jspVerticalBar" />').append(a('<div class="jspCap jspCapTop" />'), a('<div class="jspTrack" />').append(a('<div class="jspDrag" />').append(a('<div class="jspDragTop" />'), a('<div class="jspDragBottom" />'))), a('<div class="jspCap jspCapBottom" />'))); U = e.find(">.jspVerticalBar"); r = U.find(">.jspTrack"); n = r.find(">.jspDrag"); if (c.showArrows) { K = a('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp", x(0, -1)).bind("click.jsp", E); J = a('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp", x(0, 1)).bind("click.jsp", E); if (c.arrowScrollOnHover) { K.bind("mouseover.jsp", x(0, -1, K)); J.bind("mouseover.jsp", x(0, 1, J)) } fb(r, c.verticalArrowPositions, K, J) } G = g; e.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function () { G -= a(this).outerHeight() }); n.hover(function () { n.addClass("jspHover") }, function () { n.removeClass("jspHover") }).bind("mousedown.jsp", function (b) { a("html").bind("dragstart.jsp selectstart.jsp", E); n.addClass("jspActive"); var c = b.pageY - n.position().top; a("html").bind("mousemove.jsp", function (a) { D(a.pageY - c, false) }).bind("mouseup.jsp mouseleave.jsp", gb); return false }); jb() } } function jb() { r.height(G + "px"); k = 0; V = c.verticalGutter + r.outerWidth(); f.width(h - V - B); try { U.position().left === 0 && f.css("margin-left", V + "px") } catch (a) { } } function ob() { if (p) { e.append(a('<div class="jspHorizontalBar" />').append(a('<div class="jspCap jspCapLeft" />'), a('<div class="jspTrack" />').append(a('<div class="jspDrag" />').append(a('<div class="jspDragLeft" />'), a('<div class="jspDragRight" />'))), a('<div class="jspCap jspCapRight" />'))); P = e.find(">.jspHorizontalBar"); s = P.find(">.jspTrack"); o = s.find(">.jspDrag"); if (c.showArrows) { L = a('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp", x(-1, 0)).bind("click.jsp", E); M = a('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp", x(1, 0)).bind("click.jsp", E); if (c.arrowScrollOnHover) { L.bind("mouseover.jsp", x(-1, 0, L)); M.bind("mouseover.jsp", x(1, 0, M)) } fb(s, c.horizontalArrowPositions, L, M) } o.hover(function () { o.addClass("jspHover") }, function () { o.removeClass("jspHover") }).bind("mousedown.jsp", function (b) { a("html").bind("dragstart.jsp selectstart.jsp", E); o.addClass("jspActive"); var c = b.pageX - o.position().left; a("html").bind("mousemove.jsp", function (a) { H(a.pageX - c, false) }).bind("mouseup.jsp mouseleave.jsp", gb); return false }); C = e.innerWidth(); cb() } } function cb() { e.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function () { C -= a(this).outerWidth() }); s.width(C + "px"); j = 0 } function vb() { if (p && q) { var b = s.outerHeight(), d = r.outerWidth(); G -= b; a(P).find(">.jspCap:visible,>.jspArrow").each(function () { C += a(this).outerWidth() }); C -= d; g -= d; h -= b; s.parent().append(a('<div class="jspCorner" />').css("width", b + "px")); jb(); cb() } p && f.width(e.outerWidth() - B + "px"); l = f.outerHeight(); T = l / g; if (p) { y = Math.ceil(1 / W * C); if (y > c.horizontalDragMaxWidth) y = c.horizontalDragMaxWidth; else if (y < c.horizontalDragMinWidth) y = c.horizontalDragMinWidth; o.width(y + "px"); A = C - y; Z(j) } if (q) { z = Math.ceil(1 / T * G); if (z > c.verticalDragMaxHeight) z = c.verticalDragMaxHeight; else if (z < c.verticalDragMinHeight) z = c.verticalDragMinHeight; n.height(z + "px"); t = G - z; Y(k) } } function fb(g, a, b, e) { var d = "before", c = "after", f; if (a == "os") a = /Mac/.test(navigator.platform) ? "after" : "split"; if (a == d) c = a; else if (a == c) { d = a; f = b; b = e; e = f } g[d](b)[c](e) } function x(a, c, b) { return function () { xb(a, c, this, b); this.blur(); return false } } function xb(j, h, f, b) { f = a(f).addClass("jspActive"); var e, d, g = true, k = function () { j !== 0 && i.scrollByX(j * c.arrowButtonSpeed); h !== 0 && i.scrollByY(h * c.arrowButtonSpeed); d = setTimeout(k, g ? c.initialDelay : c.arrowRepeatFreq); g = false }; k(); e = b ? "mouseout.jsp" : "mouseup.jsp"; b = b || a("html"); b.bind(e, function () { f.removeClass("jspActive"); d && clearTimeout(d); d = null; b.unbind(e) }) } function Cb() { kb(); q && r.bind("mousedown.jsp", function (d) { if (d.originalTarget === b || d.originalTarget == d.currentTarget) { var j = a(this), o = j.offset(), m = d.pageY - o.top - k, e, h = true, n = function () { var p = j.offset(), a = d.pageY - p.top - z / 2, b = g * c.scrollPagePercent, o = t * b / (l - g); if (m < 0) if (k - o > a) i.scrollByY(-b); else D(a); else if (m > 0) if (k + o < a) i.scrollByY(b); else D(a); else { f(); return } e = setTimeout(n, h ? c.initialDelay : c.trackClickRepeatFreq); h = false }, f = function () { e && clearTimeout(e); e = null; a(document).unbind("mouseup.jsp", f) }; n(); a(document).bind("mouseup.jsp", f); return false } }); p && s.bind("mousedown.jsp", function (d) { if (d.originalTarget === b || d.originalTarget == d.currentTarget) { var k = a(this), o = k.offset(), l = d.pageX - o.left - j, e, g = true, n = function () { var p = k.offset(), a = d.pageX - p.left - y / 2, b = h * c.scrollPagePercent, o = A * b / (m - h); if (l < 0) if (j - o > a) i.scrollByX(-b); else H(a); else if (l > 0) if (j + o < a) i.scrollByX(b); else H(a); else { f(); return } e = setTimeout(n, g ? c.initialDelay : c.trackClickRepeatFreq); g = false }, f = function () { e && clearTimeout(e); e = null; a(document).unbind("mouseup.jsp", f) }; n(); a(document).bind("mouseup.jsp", f); return false } }) } function kb() { s && s.unbind("mousedown.jsp"); r && r.unbind("mousedown.jsp") } function gb() { a("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"); n && n.removeClass("jspActive"); o && o.removeClass("jspActive") } function D(a, d) { if (!q) return; if (a < 0) a = 0; else if (a > t) a = t; if (d === b) d = c.animateScroll; if (d) i.animate(n, "top", a, Y); else { n.css("top", a); Y(a) } } function Y(a) { if (a === b) a = n.position().top; e.scrollTop(0); k = a; var h = k === 0, c = k == t, j = a / t, i = -j * (l - g); if (O != h || N != c) { O = h; N = c; d.trigger("jsp-arrow-change", [O, N, S, R]) } nb(h, c); f.css("top", i); d.trigger("jsp-scroll-y", [-i, h, c]).trigger("scroll") } function H(a, d) { if (!p) return; if (a < 0) a = 0; else if (a > A) a = A; if (d === b) d = c.animateScroll; if (d) i.animate(o, "left", a, Z); else { o.css("left", a); Z(a) } } function Z(a) { if (a === b) a = o.position().left; e.scrollTop(0); j = a; var g = j === 0, c = j == A, k = a / A, i = -k * (m - h); if (S != g || R != c) { S = g; R = c; d.trigger("jsp-arrow-change", [O, N, S, R]) } Db(g, c); f.css("left", i); d.trigger("jsp-scroll-x", [-i, g, c]).trigger("scroll") } function nb(a, b) { if (c.showArrows) { K[a ? "addClass" : "removeClass"]("jspDisabled"); J[b ? "addClass" : "removeClass"]("jspDisabled") } } function Db(a, b) { if (c.showArrows) { L[a ? "addClass" : "removeClass"]("jspDisabled"); M[b ? "addClass" : "removeClass"]("jspDisabled") } } function u(c, a) { var b = c / (l - g); D(b * t, a) } function F(a, c) { var b = a / (m - h); H(b * A, c) } function I(s, q, o) { var b, l, m, f = 0, d = 0, k, n, p, r, i, j; try { b = a(s) } catch (t) { return } l = b.outerHeight(); m = b.outerWidth(); e.scrollTop(0); e.scrollLeft(0); while (!b.is(".jspPane")) { f += b.position().top; d += b.position().left; b = b.offsetParent(); if (/^body|html$/i.test(b[0].nodeName)) return } k = v(); p = k + g; if (f < k || q) i = f - c.verticalGutter; else if (f + l > p) i = f - g + l + c.verticalGutter; i && u(i, o); n = w(); r = n + h; if (d < n || q) j = d - c.horizontalGutter; else if (d + m > r) j = d - h + m + c.horizontalGutter; j && F(j, o) } function w() { return -f.position().left } function v() { return -f.position().top } function zb() { var a = l - g; return a > 20 && a - v() < 10 } function sb() { var a = m - h; return a > 20 && a - w() < 10 } function pb() { e.unbind(X).bind(X, function (f, g, d, a) { var b = j, e = k; i.scrollBy(d * c.mouseWheelSpeed, -a * c.mouseWheelSpeed, false); return b == j && e == k }) } function Ab() { e.unbind(X) } function E() { return false } function yb() { f.find(":input,a").unbind("focus.jsp").bind("focus.jsp", function (a) { I(a.target, false) }) } function ub() { f.find(":input,a").unbind("focus.jsp") } function mb() { var b, h, m = []; p && m.push(P[0]); q && m.push(U[0]); f.focus(function () { d.focus() }); d.attr("tabindex", 0).unbind("keydown.jsp keypress.jsp").bind("keydown.jsp", function (c) { if (c.target !== this && !(m.length && a(c.target).closest(m).length)) return; var e = j, d = k; switch (c.keyCode) { case 40: case 38: case 34: case 32: case 33: case 39: case 37: b = c.keyCode; n(); break; case 35: u(l - g); b = null; break; case 36: u(0); b = null } h = c.keyCode == b && e != j || d != k; return !h }).bind("keypress.jsp", function (a) { a.keyCode == b && n(); return !h }); if (c.hideFocus) { d.css("outline", "none"); "hideFocus" in e[0] && d.attr("hideFocus", true) } else { d.css("outline", ""); "hideFocus" in e[0] && d.attr("hideFocus", false) } function n() { var d = j, a = k; switch (b) { case 40: i.scrollByY(c.keyboardSpeed, false); break; case 38: i.scrollByY(-c.keyboardSpeed, false); break; case 34: case 32: i.scrollByY(g * c.scrollPagePercent, false); break; case 33: i.scrollByY(-g * c.scrollPagePercent, false); break; case 39: i.scrollByX(c.keyboardSpeed, false); break; case 37: i.scrollByX(-c.keyboardSpeed, false) } h = d != j || a != k; return h } } function lb() { d.attr("tabindex", "-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp") } function tb() { if (location.hash && location.hash.length > 1) { var d, c, b = escape(location.hash); try { d = a(b) } catch (g) { return } if (d.length && f.find(b)) if (e.scrollTop() === 0) c = setInterval(function () { if (e.scrollTop() > 0) { I(b, true); a(document).scrollTop(e.position().top); clearInterval(c) } }, 50); else { I(b, true); a(document).scrollTop(e.position().top) } } } function eb() { a("a.jspHijack").unbind("click.jsp-hijack").removeClass("jspHijack") } function ib() { eb(); a("a[href^=#]").addClass("jspHijack").bind("click.jsp-hijack", function () { var b = this.href.split("#"), a; if (b.length > 1) { a = b[1]; if (a.length > 0 && f.find("#" + a).length > 0) { I("#" + a, true); return false } } }) } function rb() { var g, f, c, b, a, d = false; e.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp", function (h) { var e = h.originalEvent.touches[0]; g = w(); f = v(); c = e.pageX; b = e.pageY; a = false; d = true }).bind("touchmove.jsp", function (m) { if (!d) return; var e = m.originalEvent.touches[0], l = j, h = k; i.scrollTo(g + c - e.pageX, f + b - e.pageY); a = a || Math.abs(c - e.pageX) > 5 || Math.abs(b - e.pageY) > 5; return l == j && h == k }).bind("touchend.jsp", function () { d = false }).bind("click.jsp-touchclick", function () { if (a) { a = false; return false } }) } function wb() { var b = v(), a = w(); d.removeClass("jspScrollable").unbind(".jsp"); d.replaceWith(ab.append(f.children())); ab.scrollTop(b); ab.scrollLeft(a) } a.extend(i, { reinitialise: function (b) { b = a.extend({}, c, b); bb(b) }, scrollToElement: function (b, a, c) { I(b, a, c) }, scrollTo: function (b, c, a) { F(b, a); u(c, a) }, scrollToX: function (a, b) { F(a, b) }, scrollToY: function (b, a) { u(b, a) }, scrollToPercentX: function (a, b) { F(a * (m - h), b) }, scrollToPercentY: function (a, b) { u(a * (l - g), b) }, scrollBy: function (b, c, a) { i.scrollByX(b, a); i.scrollByY(c, a) }, scrollByX: function (a, c) { var b = w() + Math[a < 0 ? "floor" : "ceil"](a), d = b / (m - h); H(d * A, c) }, scrollByY: function (a, c) { var b = v() + Math[a < 0 ? "floor" : "ceil"](a), d = b / (l - g); D(d * t, c) }, positionDragX: function (b, a) { H(b, a) }, positionDragY: function (a, b) { D(a, b) }, animate: function (b, e, f, d) { var a = {}; a[e] = f; b.animate(a, { duration: c.animateDuration, easing: c.animateEase, queue: false, step: d }) }, getContentPositionX: function () { return w() }, getContentPositionY: function () { return v() }, getContentWidth: function () { return m }, getContentHeight: function () { return l }, getPercentScrolledX: function () { return w() / (m - h) }, getPercentScrolledY: function () { return v() / (l - g) }, getIsScrollableH: function () { return p }, getIsScrollableV: function () { return q }, getContentPane: function () { return f }, scrollToBottom: function (a) { D(t, a) }, hijackInternalLinks: function () { ib() }, destroy: function () { wb() } }); bb(Bb) } c = a.extend({}, a.fn.jScrollPane.defaults, c); a.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function () { c[this] = c[this] || c.speed }); return this.each(function () { var e = a(this), b = e.data("jsp"); if (b) b.reinitialise(c); else { b = new d(e, c); e.data("jsp", b) } }) }; a.fn.jScrollPane.defaults = { showArrows: false, maintainPosition: true, stickToBottom: false, stickToRight: false, clickOnTrack: true, autoReinitialise: false, autoReinitialiseDelay: 500, verticalDragMinHeight: 0, verticalDragMaxHeight: 99999, horizontalDragMinWidth: 0, horizontalDragMaxWidth: 99999, contentWidth: b, animateScroll: false, animateDuration: 300, animateEase: "linear", hijackInternalLinks: false, verticalGutter: 4, horizontalGutter: 4, mouseWheelSpeed: 0, arrowButtonSpeed: 0, arrowRepeatFreq: 50, arrowScrollOnHover: false, trackClickSpeed: 0, trackClickRepeatFreq: 70, verticalArrowPositions: "split", horizontalArrowPositions: "split", enableKeyboardNavigation: true, hideFocus: false, keyboardSpeed: 0, initialDelay: 300, speed: 30, scrollPagePercent: .8} })(jQuery, this)